/*
 * flux implementation via redux
 */
import { createStore, applyMiddleware, combineReducers, compose } from 'redux'
import reduxThunk from 'redux-thunk'
import rootReducer from '../reducers/rootReducer'
import { routerMiddleware } from 'react-router-redux'
import { hashHistory } from 'react-router'
import initialAppState from './initialAppState'

const reduxRouter = routerMiddleware(hashHistory)

export default function configureStore(state = initialAppState) {
    const store = createStore(
        rootReducer,
        state,
        compose(
            applyMiddleware(
                reduxThunk,
                reduxRouter
            ),
            window.devToolsExtension ? window.devToolsExtension() : (next) => {
                return next
            }
        )
    )

    //TODO: get this working for hot module reloading which is now explicit
    // if(module.hot) {
    //     module.hot.accept('./reducers', () => {
    //         const nextRootReducer = require('../reducers/rootReducer')
    //         store.replaceReducer(nextRootReducer)
    //     });
    // }

    return store
}